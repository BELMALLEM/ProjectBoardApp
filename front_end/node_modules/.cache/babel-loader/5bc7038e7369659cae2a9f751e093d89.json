{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/ProjectBoardApp/projectboard_front/src/components/ProjectBoard.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ProjectTaskltem from \"./ProjectTask/ProjectTaskltem\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getBacklog } from \"../actions/projectTaskActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProjectBoard extends Component {\n  componentDidMount() {\n    this.props.getBacklog();\n  }\n\n  render() {\n    const {\n      project_tasks\n    } = this.props.project_tasks;\n    let BoardContent;\n    let todoItems = [];\n    let inprogressItems = [];\n    let doneItems = [];\n\n    const BoardAlgorithm = project_tasks => {\n      if (project_tasks.length < 1) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-info text-center\",\n          role: \"alert\",\n          children: \"No project tasks on board\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this);\n      } else {\n        const tasks = project_tasks.map(project_task => /*#__PURE__*/_jsxDEV(ProjectTaskltem, {\n          project_task: project_task\n        }, project_task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this));\n\n        for (let i = 0; i < tasks.length; i++) {\n          if (tasks[i].props.project_task.status === \"TO_DO\") {\n            todoItems.push(tasks[i]);\n          }\n\n          if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\n            inprogressItems.push(tasks[i]);\n          }\n\n          if (tasks[i].props.project_task.status === \"DONE\") {\n            doneItems.push(tasks[i]);\n          }\n        }\n      }\n    };\n\n    BoardAlgorithm(project_tasks);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/addProjectTask\",\n          className: \"btn btn-primary mb-3\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-plus-circle\",\n            children: \" Create Project Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card text-center mb-2\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-header bg-secondary text-white\",\n                  children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"TO DO\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ProjectTaskltem, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card text-center mb-2\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-header bg-primary text-white\",\n                  children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"In Progress\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ProjectTaskltem, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card text-center mb-2\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-header bg-success text-white\",\n                  children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"Done\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nProjectBoard.propTypes = {\n  getBacklog: PropTypes.func.isRequired,\n  project_tasks: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project_tasks: state.project_task\n});\n\nexport default connect(mapStateToProps, {\n  getBacklog\n})(ProjectBoard);","map":{"version":3,"sources":["/Users/mac/Desktop/ProjectBoardApp/projectboard_front/src/components/ProjectBoard.js"],"names":["React","Component","Link","ProjectTaskltem","PropTypes","connect","getBacklog","ProjectBoard","componentDidMount","props","render","project_tasks","BoardContent","todoItems","inprogressItems","doneItems","BoardAlgorithm","length","tasks","map","project_task","id","i","status","push","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ProjectTaskltem from \"./ProjectTask/ProjectTaskltem\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getBacklog } from \"../actions/projectTaskActions\";\n\nclass ProjectBoard extends Component {\n  componentDidMount() {\n    this.props.getBacklog();\n  }\n\n  render() {\n    const { project_tasks } = this.props.project_tasks;\n\n    let BoardContent;\n    let todoItems = [];\n    let inprogressItems = [];\n    let doneItems = [];\n\n    const BoardAlgorithm = (project_tasks) => {\n      if (project_tasks.length < 1) {\n        return (\n          <div className=\"alert alert-info text-center\" role=\"alert\">\n            No project tasks on board\n          </div>\n        );\n      } else {\n        const tasks = project_tasks.map((project_task) => (\n          <ProjectTaskltem key={project_task.id} project_task={project_task} />\n        ));\n\n        for (let i = 0; i < tasks.length; i++) {\n          if (tasks[i].props.project_task.status === \"TO_DO\") {\n            todoItems.push(tasks[i]);\n          }\n          if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\n            inprogressItems.push(tasks[i]);\n          }\n          if (tasks[i].props.project_task.status === \"DONE\") {\n            doneItems.push(tasks[i]);\n            \n          }\n        }\n      }\n    };\n\n    BoardAlgorithm(project_tasks);\n\n    return (\n      <div>\n        {\n          //<!-- Project Board Starts Here MIND OTHER COMPONENTS WHEN COPY AND PASTING -->\n        }\n        <div className=\"container\">\n          <Link to=\"/addProjectTask\" className=\"btn btn-primary mb-3\">\n            <i className=\"fas fa-plus-circle\"> Create Project Task</i>\n          </Link>\n          <br />\n          <hr />\n          {\n            //<!-- Backlog STARTS HERE -->\n          }\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-4\">\n                <div className=\"card text-center mb-2\">\n                  <div className=\"card-header bg-secondary text-white\">\n                    <h3>TO DO</h3>\n                  </div>\n                </div>\n\n                <ProjectTaskltem />\n              </div>\n              <div className=\"col-md-4\">\n                <div className=\"card text-center mb-2\">\n                  <div className=\"card-header bg-primary text-white\">\n                    <h3>In Progress</h3>\n                  </div>\n                </div>\n\n                <ProjectTaskltem />\n              </div>\n              <div className=\"col-md-4\">\n                <div className=\"card text-center mb-2\">\n                  <div className=\"card-header bg-success text-white\">\n                    <h3>Done</h3>\n                  </div>\n                </div>\n                {\n                  //<!-- SAMPLE PROJECT TASK STARTS HERE -->\n                  // <!-- SAMPLE PROJECT TASK ENDS HERE -->\n                }\n              </div>\n            </div>\n          </div>\n\n          {\n            //<!-- Backlog ENDS HERE -->\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectBoard.propTypes = {\n  getBacklog: PropTypes.func.isRequired,\n  project_tasks: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  project_tasks: state.project_task,\n});\n\nexport default connect(mapStateToProps, { getBacklog })(ProjectBoard);\n"]},"metadata":{},"sourceType":"module"}